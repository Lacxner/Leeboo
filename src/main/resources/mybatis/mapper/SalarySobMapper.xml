<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gzy.leeboo.mapper.SalarySobMapper" >
  <!-- 获取所有的工资账套 -->
  <select id="getAllSalarySob" resultType="com.gzy.leeboo.entity.SalarySob">
    SELECT
        *
    FROM
        salary_sob
  </select>

  <!-- 根据id获取工资账套 -->
  <select id="getSalarySobById" parameterType="integer" resultType="com.gzy.leeboo.entity.SalarySob">
    SELECT
        *
    FROM
        salary_sob
    WHERE
        `id` = #{id}
  </select>

  <!-- 根据id删除工资账套 -->
  <delete id="deleteSalarySobById" parameterType="integer" >
    DELETE FROM
        salary_sob
    WHERE
        `id` = #{id}
  </delete>

  <!-- 根据id批量删除工资账套 -->
  <delete id="deleteBatchSalarySobByIds" parameterType="list">
    DELETE FROM
        salary_sob
    WHERE
        `id` IN
    <foreach collection="list" item="id" open="(" separator="," close=")">
        #{id}
    </foreach>
  </delete>

  <!-- 添加工资账套 -->
  <insert id="addSalarySob" parameterType="com.gzy.leeboo.entity.SalarySob" >
    INSERT INTO
        `salary_sob`(`name`, `basicSalary`, `lunchSalary`, `trafficSalary`, `allSalary`, `pensionBase`, `pensionPer`, `medicalBase`,
          `medicalPer`, `accumulationFundBase`, `accumulationFundPer`)
    VALUES (#{name}, #{basicSalary}, #{lunchSalary}, #{trafficSalary}, #{allSalary}, #{pensionBase}, #{pensionPer}, #{medicalBase},
        #{medicalPer}, #{accumulationFundBase},  #{accumulationFundPer})
  </insert>

  <!-- 修改工资账套 -->
  <update id="updateSalarySob" parameterType="com.gzy.leeboo.entity.SalarySob" >
    UPDATE
        salary_sob
    <set >
      <if test="name != null and name.trim() != ''" >
        `name` = #{name},
      </if>
      <if test="basicSalary != null" >
        `basicSalary` = #{basicSalary},
      </if>
      <if test="lunchSalary != null" >
        `lunchSalary` = #{lunchSalary},
      </if>
      <if test="trafficSalary != null" >
        `trafficSalary` = #{trafficSalary},
      </if>
      <if test="allSalary != null" >
        `allSalary` = #{allSalary},
      </if>
      <if test="pensionBase != null" >
        `pensionBase` = #{pensionBase},
      </if>
      <if test="pensionPer != null" >
        `pensionPer` = #{pensionPer},
      </if>
      <if test="medicalBase != null" >
        `medicalBase` = #{medicalBase},
      </if>
      <if test="medicalPer != null" >
        `medicalPer` = #{medicalPer},
      </if>
      <if test="accumulationFundBase != null" >
        `accumulationFundBase` = #{accumulationFundBase},
      </if>
      <if test="accumulationFundPer != null" >
        `accumulationFundPer` = #{accumulationFundPer},
      </if>
    </set>
    WHERE
        `id` = #{id}
  </update>
</mapper>